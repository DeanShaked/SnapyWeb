[{"C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\index.js":"1","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\App.js":"2","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Login\\Login.js":"3","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Register\\Register.js":"4","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Home\\Home.js":"5","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Calendar\\Calendar.js":"6","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Settings\\Settings.js":"7","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\components\\Navbar.js":"8","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\utils\\Storage.js":"9"},{"size":273,"mtime":1608898210223,"results":"10","hashOfConfig":"11"},{"size":2571,"mtime":1610890497966,"results":"12","hashOfConfig":"11"},{"size":3413,"mtime":1610464123350,"results":"13","hashOfConfig":"11"},{"size":3228,"mtime":1610285819832,"results":"14","hashOfConfig":"11"},{"size":2237,"mtime":1610890100927,"results":"15","hashOfConfig":"11"},{"size":1227,"mtime":1608545130961,"results":"16","hashOfConfig":"11"},{"size":254,"mtime":1608480635903,"results":"17","hashOfConfig":"11"},{"size":935,"mtime":1610466562145,"results":"18","hashOfConfig":"11"},{"size":551,"mtime":1610447634869,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"qmquak",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\index.js",[],["41","42"],"C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\App.js",[],"C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Login\\Login.js",["43"],"import React from \"react\";\r\nimport axios from 'axios'\r\nimport { Redirect } from \"react-router-dom\";import {\r\n    setInStorage,\r\n  } from '../../utils/Storage';\r\n  \r\n  export default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:'',\r\n            password:'',\r\n            loginError: '',\r\n            isLoggedIn: false  \r\n        };\r\n        this.changeEmail = this.changeEmail.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n    }\r\n    onSubmit = (event) => {\r\n      \r\n        event.preventDefault()\r\n\r\n        const loggedIn = {\r\n          email:this.state.email,\r\n          password:this.state.password\r\n        }\r\n        axios.post(\"http://localhost:4000/login\", loggedIn) \r\n        .then(res => {\r\n        if (res.data.success) {\r\n            setInStorage('calendaro', { token: res.data.token });\r\n            this.setState({\r\n              loginError: res.message,\r\n              isLoggedIn: true,\r\n              email: '',\r\n              password: '',\r\n              token: res.token,\r\n            });\r\n          } else {\r\n            this.setState({\r\n              loginError: res.message,\r\n            });\r\n          }\r\n        });\r\n    }\r\n\r\n    changeEmail = (event) => {\r\n        this.setState({\r\n            email:event.target.value\r\n        })\r\n    }\r\n\r\n    changePassword = (event) => {\r\n        this.setState({\r\n            password:event.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        if (this.state.isLoggedIn) {\r\n          return <Redirect to = {{ pathname: \"/home\" }} />;\r\n        } \r\n        else {\r\n            return (\r\n                <div className=\"auth-wrapper\">\r\n                    <div className=\"auth-inner\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <h3>Login</h3>\r\n    \r\n                            <div className=\"form-group\">\r\n                                <label>Email address</label>\r\n                                <input \r\n                                type=\"email\"\r\n                                className=\"form-control\" \r\n                                placeholder=\"Enter email\"\r\n                                onChange={this.changeEmail}\r\n                                value={this.state.email} \r\n                                />\r\n                            </div>\r\n    \r\n                            <div className=\"form-group\">\r\n                                <label>Password</label>\r\n                                <input \r\n                                type=\"password\" \r\n                                className=\"form-control\" \r\n                                placeholder=\"Enter password\"\r\n                                onChange={this.changePassword}\r\n                                value={this.state.password} \r\n                                />\r\n                            </div>\r\n    \r\n                            <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\r\n                            <p className=\"forgot-password text-right\">\r\n                                Forgot <a href=\"#\">password?</a>\r\n                            </p>\r\n                        </form>\r\n                        <div className=\"error-message\">{this.state.loginError}</div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n    \r\n    }   \r\n}","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Register\\Register.js",[],"C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Home\\Home.js",[],"C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Calendar\\Calendar.js",["44","45"],"import React, { useState } from 'react'\r\nimport { format } from 'date-fns'\r\nimport { enGB } from 'date-fns/locale'\r\nimport { DatePickerCalendar } from 'react-nice-dates'\r\nimport 'react-nice-dates/build/style.css'\r\n\r\n{/* Require Session  */}\r\n{/* Pass in User Data */}\r\n\r\nfunction Calendar() {\r\n    const [date, setDate] = useState()\r\n    return (\r\n        <div className=\"auth-wrapper\">\r\n            <div className=\"auth-inner\">\r\n                <p>\r\n                    Selected date: {date ? format(date, 'dd MMM yyyy', { locale: enGB }) : 'none'}.\r\n                </p>\r\n                <DatePickerCalendar date={date} onDateChange={setDate} locale={enGB} />\r\n                <hr/>\r\n                <h3>Add New Event</h3>\r\n                <div className=\"form-group\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Add Title\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>When</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Add Time\" />\r\n                </div>\r\n                    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar\r\n","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Settings\\Settings.js",[],"C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\components\\Navbar.js",[],"C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\utils\\Storage.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":93,"column":40,"nodeType":"52","endLine":93,"endColumn":52},{"ruleId":"53","severity":1,"message":"54","line":7,"column":1,"nodeType":"55","messageId":"56","endLine":7,"endColumn":25},{"ruleId":"53","severity":1,"message":"54","line":8,"column":1,"nodeType":"55","messageId":"56","endLine":8,"endColumn":26},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]