[{"C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\index.js":"1","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\App.js":"2","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Login\\Login.js":"3","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Register\\Register.js":"4","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Home\\Home.js":"5","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Calendar\\Calendar.js":"6","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Settings\\Settings.js":"7","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\components\\Navbar.js":"8","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\utils\\Storage.js":"9"},{"size":273,"mtime":1608898210223,"results":"10","hashOfConfig":"11"},{"size":1192,"mtime":1610265354731,"results":"12","hashOfConfig":"11"},{"size":4169,"mtime":1610192084487,"results":"13","hashOfConfig":"11"},{"size":3192,"mtime":1610182322283,"results":"14","hashOfConfig":"11"},{"size":1128,"mtime":1610192359777,"results":"15","hashOfConfig":"11"},{"size":1227,"mtime":1608545130961,"results":"16","hashOfConfig":"11"},{"size":254,"mtime":1608480635903,"results":"17","hashOfConfig":"11"},{"size":942,"mtime":1610264917027,"results":"18","hashOfConfig":"11"},{"size":527,"mtime":1610191822024,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"qmquak",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\index.js",[],["42","43"],"C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\App.js",["44"],"C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Login\\Login.js",["45"],"import React from \"react\";\r\nimport axios from 'axios';\r\nimport { Redirect } from \"react-router-dom\";\r\nexport default class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email:'',\r\n            password:'',\r\n            isSignedUp:false\r\n        };\r\n        this.changeEmail = this.changeEmail.bind(this)\r\n        this.changePassword = this.changePassword.bind(this)\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        \r\n        event.preventDefault()\r\n\r\n        const loggedIn = {\r\n            email:this.state.email,\r\n            password:this.state.password\r\n        }\r\n\r\n        axios.post(\"http://localhost:4000/login\", loggedIn) \r\n        .then(res => {\r\n            if (res.data.success === true) {\r\n                console.log(res.data)\r\n                this.setState({ isSignedUp: true });\r\n            }\r\n            else {\r\n                console.log(res.data)\r\n            }\r\n        })\r\n\r\n\r\n        this.setState({\r\n            email:'',\r\n            password:''\r\n        })\r\n    }\r\n\r\n    onSignIn() {\r\n        // Grab state\r\n        const {\r\n          loginEmail,\r\n          signInPassword,\r\n        } = this.state;\r\n        this.setState({\r\n          isLoading: true,\r\n        });\r\n        // Post request to backend\r\n        fetch('/signin', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            email: loginEmail,\r\n            password: signInPassword,\r\n          }),\r\n        }).then(res => res.json())\r\n          .then(json => {\r\n            console.log('json', json);\r\n            if (json.success) {\r\n              setInStorage('the_main_app', { token: json.token });\r\n              this.setState({\r\n                signInError: json.message,\r\n                isLoading: false,\r\n                signInPassword: '',\r\n                loginEmail: '',\r\n                token: json.token,\r\n              });\r\n            } else {\r\n              this.setState({\r\n                signInError: json.message,\r\n                isLoading: false,\r\n              });\r\n            }\r\n          });\r\n      }\r\n\r\n    changeEmail = (event) => {\r\n        this.setState({\r\n            email:event.target.value\r\n        })\r\n    }\r\n\r\n    changePassword = (event) => {\r\n        this.setState({\r\n            password:event.target.value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        console.log(this.state.isSignedUp)\r\n        if (this.state.isSignedUp) {\r\n            // redirect to home if signed up\r\n            return <Redirect to = {{ pathname: \"/home\" }} />;\r\n        }\r\n        return (\r\n            <div className=\"auth-wrapper\">\r\n                <div className=\"auth-inner\">\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <h3>Login</h3>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Email address</label>\r\n                            <input \r\n                            type=\"email\"\r\n                            className=\"form-control\" \r\n                            placeholder=\"Enter email\"\r\n                            onChange={this.changeEmail}\r\n                            value={this.state.email} \r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>Password</label>\r\n                            <input \r\n                            type=\"password\" \r\n                            className=\"form-control\" \r\n                            placeholder=\"Enter password\"\r\n                            onChange={this.changePassword}\r\n                            value={this.state.password} \r\n                            />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\r\n                        <p className=\"forgot-password text-right\">\r\n                            Forgot <a href=\"#\">password?</a>\r\n                        </p>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }   \r\n}","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Register\\Register.js",[],"C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Home\\Home.js",["46","47"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {\r\n    setInStorage,\r\n    getFromStorage,\r\n  } from '../../utils/Storage';\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            isLoggedOut: false\r\n        }\r\n        this.logout = this.logout.bind(this)\r\n    }\r\n    \r\n    logout = () => {\r\n        axios.get(\"http://localhost:4000/logout\")\r\n        .then(res => {console.log(res.data)})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoggedOut) {\r\n            // redirect to home if signed up\r\n            return <Redirect to = {{ pathname: \"/calendar\" }} />;\r\n        }\r\n        return(\r\n        <div className=\"auth-wrapper\">\r\n            <div className=\"auth-inner\">\r\n                <h3>Event Title</h3>\r\n                <label>Event Name</label>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Event name\" />\r\n                {/* <button value=\"Logout\" onClick={this.logout}></button> */}\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Calendar\\Calendar.js",["48","49"],"import React, { useState } from 'react'\r\nimport { format } from 'date-fns'\r\nimport { enGB } from 'date-fns/locale'\r\nimport { DatePickerCalendar } from 'react-nice-dates'\r\nimport 'react-nice-dates/build/style.css'\r\n\r\n{/* Require Session  */}\r\n{/* Pass in User Data */}\r\n\r\nfunction Calendar() {\r\n    const [date, setDate] = useState()\r\n    return (\r\n        <div className=\"auth-wrapper\">\r\n            <div className=\"auth-inner\">\r\n                <p>\r\n                    Selected date: {date ? format(date, 'dd MMM yyyy', { locale: enGB }) : 'none'}.\r\n                </p>\r\n                <DatePickerCalendar date={date} onDateChange={setDate} locale={enGB} />\r\n                <hr/>\r\n                <h3>Add New Event</h3>\r\n                <div className=\"form-group\">\r\n                    <label>Title</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Add Title\" />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label>When</label>\r\n                    <input type=\"text\" className=\"form-control\" placeholder=\"Add Time\" />\r\n                </div>\r\n                    \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar\r\n","C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\pages\\Settings\\Settings.js",[],"C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\components\\Navbar.js",[],"C:\\Users\\Dean\\Desktop\\React\\SnapyWeb\\snapy-web\\src\\utils\\Storage.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":4,"column":50,"nodeType":"56","messageId":"57","endLine":4,"endColumn":54},{"ruleId":"58","severity":1,"message":"59","line":91,"column":36,"nodeType":"60","endLine":91,"endColumn":48},{"ruleId":"54","severity":1,"message":"61","line":5,"column":5,"nodeType":"56","messageId":"57","endLine":5,"endColumn":17},{"ruleId":"54","severity":1,"message":"62","line":6,"column":5,"nodeType":"56","messageId":"57","endLine":6,"endColumn":19},{"ruleId":"63","severity":1,"message":"64","line":7,"column":1,"nodeType":"65","messageId":"66","endLine":7,"endColumn":25},{"ruleId":"63","severity":1,"message":"64","line":8,"column":1,"nodeType":"65","messageId":"66","endLine":8,"endColumn":26},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'setInStorage' is defined but never used.","'getFromStorage' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]